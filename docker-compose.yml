version: '3.8'

services:
  frontend:
    image: stacklabdigital/orbitchat:develop
    working_dir: /app
    environment:
      - VITE_GRAPHQL_URL=https://api.orbitchat.io/graphql
      - NODE_ENV=production
      - HOST=0.0.0.0
    depends_on:
      - backend
    restart: unless-stopped
    command: npm run preview -- --host 0.0.0.0 --port 5173
    networks:
      - pedetudo
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      labels:
        - traefik.enable=true
        - traefik.http.routers.orbitchat_frontend.rule=Host(`orbit.stacklab.digital`)
        - traefik.http.routers.orbitchat_frontend.entrypoints=websecure
        - traefik.http.routers.orbitchat_frontend.tls.certresolver=letsencryptresolver
        - traefik.http.routers.orbitchat_frontend.service=orbitchat_frontend
        - traefik.http.services.orbitchat_frontend.loadbalancer.server.port=5173
        - traefik.http.services.orbitchat_frontend.loadbalancer.passHostHeader=true
        - traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto=https
        - traefik.http.routers.orbitchat_frontend.middlewares=sslheader@docker

  backend:
    image: stacklabdigital/orbitchat:develop
    working_dir: /app/backend
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://orbitchat:orbitchat@postgres:5432/orbitchat?schema=public
      - JWT_SECRET=1234
      - FRONTEND_URL=https://app.orbitchat.io
      - HOST=0.0.0.0
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    command: sh -c "npx prisma migrate deploy && npm run start"
    networks:
      - pedetudo
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      labels:
        - traefik.enable=true
        - traefik.http.routers.orbitchat_backend.rule=Host(`orbit-api.stacklab.digital`)
        - traefik.http.routers.orbitchat_backend.entrypoints=websecure
        - traefik.http.routers.orbitchat_backend.tls.certresolver=letsencryptresolver
        - traefik.http.routers.orbitchat_backend.service=orbitchat_backend
        - traefik.http.services.orbitchat_backend.loadbalancer.server.port=4000
        - traefik.http.services.orbitchat_backend.loadbalancer.passHostHeader=true
        - traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto=https
        - traefik.http.routers.orbitchat_backend.middlewares=sslheader@docker

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=orbitchat
      - POSTGRES_PASSWORD=orbitchat
      - POSTGRES_DB=orbitchat
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - pedetudo
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U orbitchat"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      placement:
        constraints:
          - node.role == manager

volumes:
  postgres_data:

networks:
  pedetudo:
    external: true
    name: pedetudo